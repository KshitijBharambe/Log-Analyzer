services:
  log-generator:
    build: ./log-generator
    volumes:
      - ./log-files:/logs
    environment:
      - LOG_FILE_PATH=/logs/application.log
      - KAFKA_BROKER=kafka:9092
      - KAFKA_ENABLED=true
      - KAFKA_TOPIC=logs

  log-analyzer:
    build: ./log-analyzer
    volumes:
      - ./log-files:/logs
    environment:
      - LOG_FILE_PATH=/logs/application.log
      - ANOMALY_FILE_PATH=/logs/anomalies.json
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_INDEX=logs
      - ELASTICSEARCH_ANOMALY_INDEX=anomalies
      - KAFKA_ENABLED=true
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=logs
      - KAFKA_CONSUMER_GROUP=log-analyzer
    depends_on:
      - elasticsearch
      - kafka

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3

  kibana-setup:
    build:
      context: ./kibana-setup
      dockerfile: Dockerfile
    environment:
      - KIBANA_HOST=http://kibana:5601
      - ELASTICSEARCH_INDEX=logs
      - ELASTICSEARCH_ANOMALY_INDEX=anomalies
    depends_on:
      kibana:
        condition: service_healthy
    restart: on-failure

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - elasticsearch

  grafana-setup:
    build:
      context: ./grafana-setup
      dockerfile: Dockerfile
    environment:
      - GRAFANA_HOST=http://grafana:3000
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
      - ELASTICSEARCH_INDEX=logs
      - ELASTICSEARCH_ANOMALY_INDEX=anomalies
    depends_on:
      - grafana
      - elasticsearch
    restart: on-failure

volumes:
  esdata:
    driver: local
  grafana-data:
    driver: local
